-> Idéia geral desse feature-branch: comunicar os módulos rc e io.

+ editar o common/pv_interface.h pra definir os metodos padrao de envio e recebimento [?] 
		-> usar xTaskOverwrite para queues unitárias
		-> checar por handles NULL

+ cada modulo possuirá uma struct já instanciada com handlers vazios para as queues de saida,
  e handlers apontando para as próprias queues (que só serão válidas após o init do módulo, onde
  ocorrerá a chamada xQueueCreate().
  
+ structs serao conectadas na main (e.g., rc_interface.q1out = io_interface.q1in; )

+ uso de um pv_interface_**{.c,.h} pode ser desnecessário -> a propria struct contendo os ponteiros é considerada a interface  

+ nomenclatura das queues
	iQueue = internal, ou input queue: contida/inicializada no modulo;
	oQueue = ouput: handle para queue externa, inicializado em NULL
  