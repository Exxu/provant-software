/**
  ******************************************************************************
  * @file    subsystems/subsys_ContinousContorl/MpcControle.h
  * @author  Richard Andrade
  * @version V1.0.0
  * @date    27-Julho-2015
  * @brief   Mathematic Model for Load Transportation.
  *****************************************************************************/

/* Includes ------------------------------------------------------------------*/
#include "AircraftModel.h"
/* Private typedef -----------------------------------------------------------*/
/* Private define ------------------------------------------------------------*/
/* Private macro -------------------------------------------------------------*/
/* Private variables ---------------------------------------------------------*/


/* Exported functions definitions --------------------------------------------*/
namespace model {
/** \brief Função principal do módulo de RC.
  * @param  None
  * @retval None
  *
  * Interpreta o recebimento de PPM, calcula sinais de controle e os envia
  * via interface.
  * Devido as diferenças do modelo matematica com a construção mecanica o sinal do angulo do servo direito deve
  * ser adaptado.
  *
  */
AircraftModel::AircraftModel() {

}

AircraftModel::~AircraftModel() {
	// TODO Auto-generated destructor stub
}

void AircraftModel::LinearModel(Eigen::MatrixXf as, float ts, Eigen::MatrixXf * Az, Eigen::MatrixXf * Bz){
	/* Name spaces ------------------------------------------------------------------*/
	using namespace Eigen;
	float ddxr, ddyr, ddzr;
	/*Refrence aceleration*/
	ddxr=as(0,0);
	ddyr=as(1,0);
	ddzr=as(2,0);
	/*Linear Model*/
	MatrixXf A(16,16);
	MatrixXf B(16,4);
	MatrixXf C(2,16);
	/*Extended Model*/
	MatrixXf Aa(18,18);
	MatrixXf Ba(18,4);
	MatrixXf Ca(18,18);

	/*Matrix A*/
	A.setZero();
	A(0,8)=1.0;
	A(1,9)=1.0;
	A(2,10)=1.0;
	A(3,11)=1.0;
	A(4,12)=1.0;
	A(5,13)=1.0;
	A(6,14)=1.0;
	A(7,15)=1.0;
	A(8,3)=0.385155*ddyr - 0.000810738*ddxr - 0.00006139329999999999*ddzr - 0.000602268;
	A(8,4)=0.00324657*ddyr - 0.000000271808*ddxr + 1.00001*ddzr + 9.81006;
	A(8,5)=0.00164467*ddxr - 0.78133*ddyr;
	A(8,6)=1.06402*ddyr - 0.00223308*ddxr + 1.01096*ddzr + 9.917490000000001;
	A(8,7)=0.00225806*ddxr - 1.06957*ddyr + 1.01383*ddzr + 9.94571;
	A(8,14)=-0.0000364215;
	A(8,15)=-0.0000364109;
	A(9,3)=0.00267892*ddyr - 0.0000122004*ddxr - 0.999891*ddzr - 9.80893;
	A(9,4)=0.0517074*ddyr - 0.000108842*ddxr + 0.000012699*ddzr + 0.000124577;
	A(9,5)=0.02467*ddyr - 0.0000519295*ddxr;
	A(9,6)=0.0298909*ddyr - 0.00006273489999999999*ddxr + 0.0280948*ddzr + 0.27561;
	A(9,7)=0.0294709*ddyr - 0.0000622171*ddxr - 0.0277009*ddzr - 0.271746;
	A(9,14)=-0.0000000215367;
	A(9,15)=0.000000000663933;
	A(10,3)=0.781861*ddyr - 0.00164579*ddxr - 0.0000000603112*ddzr - 0.000000591653;
	A(10,4)=0.0000523419*ddxr - 0.0248659*ddyr - 0.0000000409284*ddzr - 0.000000401508;
	A(10,6)=0.000755298*ddyr - 0.00000158519*ddxr + 0.000714737*ddzr + 0.00701157;
	A(10,7)=0.00000197313*ddxr - 0.000934622*ddyr + 0.0008804350000000001*ddzr + 0.00863707;
	A(10,14)=-0.0000000610856;
	A(10,15)=-0.00000006115620000000001;
	A(11,3)=0.00196738*ddyr - 0.00000414023*ddxr + 0.000158919*ddzr + 0.001559;
	A(11,4)=0.00102769*ddxr - 0.488221*ddyr - 0.000187867*ddzr - 0.00184298;
	A(11,6)=0.0009942180000000001*ddxr - 0.473708*ddyr - 0.444967*ddzr - 4.36513;
	A(11,7)=0.000986128*ddxr - 0.467109*ddyr + 0.438786*ddzr + 4.30449;
	A(11,14)=0.000000329886;
	A(11,15)=0.00000000140342;
	A(12,3)=5.63166*ddyr - 0.0118545*ddxr - 0.000950154*ddzr - 0.009321009999999999;
	A(12,4)=0.0598436*ddyr - 0.000125968*ddxr + 0.0000568274*ddzr + 0.000557477;
	A(12,6)=8.600619999999999*ddyr - 0.0180506*ddxr + 8.133419999999999*ddzr + 79.7888;
	A(12,7)=0.0182617*ddxr - 8.65008*ddyr + 8.160740000000001*ddzr + 80.0568;
	A(12,14)=-0.0005812359999999999;
	A(12,15)=-0.000581128;
	A(13,3)=0.27475*ddyr - 0.00057829*ddxr + 0.00744252*ddzr + 0.0730112;
	A(13,4)=0.0192658*ddxr - 9.15255*ddyr - 0.008829760000000001*ddzr - 0.0866199;
	A(13,6)=4.71363*ddyr - 0.00989339*ddxr + 4.36487*ddzr + 42.8193;
	A(13,7)=4.74055*ddyr - 0.0100075*ddxr - 4.38071*ddzr - 42.9748;
	A(13,14)=0.00000826219;
	A(13,15)=-0.00000714437;
	A(14,3)=0.0125063*ddxr - 5.94134*ddyr + 0.00159447*ddzr + 0.0156417;
	A(14,4)=0.00180361*ddxr - 0.85684*ddyr - 0.000825301*ddzr - 0.0080962;
	A(14,6)=0.0171208*ddxr - 8.1576*ddyr - 7.72254*ddzr - 75.7581;
	A(14,7)=9.02993*ddyr - 0.0190635*ddxr - 8.51112*ddzr - 83.4941;
	A(14,14)=0.0467503;
	A(14,15)=0.000578299;
	A(15,3)=0.0124614*ddxr - 5.91999*ddyr + 0.00029729*ddzr + 0.00291642;
	A(15,4)=0.739233*ddyr - 0.00155606*ddxr + 0.000713644*ddzr + 0.00700085;
	A(15,6)=0.0188448*ddxr - 8.979010000000001*ddyr - 8.483169999999999*ddzr - 83.2199;
	A(15,7)=8.20356*ddyr - 0.0173191*ddxr - 7.74747*ddzr - 76.0027;
	A(15,14)=0.000578299;
	A(15,15)=0.0467501;
	/*Matrix B*/
	B.setZero();
	B(8,0)=1.170580E-05;
	B(8,1)=-1.172960E-05;
	B(8,2)=-7.284300E-03;
	B(8,3)=-7.282180E-03;
	B(9,0)=3.707360E-04;
	B(9,1)=-3.714920E-04;
	B(9,2)=-4.307330E-06;
	B(9,3)=1.327870E-07;
	B(10,0)=4.968150E-04;
	B(10,1)=4.993780E-04;
	B(10,2)=-1.221710E-05;
	B(10,3)=-1.223120E-05;
	B(11,0)=-5.223100E-03;
	B(11,1)=5.233750E-03;
	B(11,2)=6.597720E-05;
	B(11,3)=2.806850E-07;
	B(12,0)=1.882090E-04;
	B(12,1)=-1.885930E-04;
	B(12,2)=-1.162470E-01;
	B(12,3)=-1.162260E-01;
	B(13,0)=1.526460E-04;
	B(13,1)=-1.529580E-04;
	B(13,2)=1.652440E-03;
	B(13,3)=-1.428870E-03;
	B(14,0)=-1.742050E-04;
	B(14,1)=1.745600E-04;
	B(14,2)=9.350060E+00;
	B(14,3)=1.156600E-01;
	B(15,0)=-2.008070E-04;
	B(15,1)=2.012170E-04;
	B(15,2)=1.156600E-01;
	B(15,3)=9.350010E+00;
	/*Matrix C*/
	C.setZero();
	C(0,2)=1;
	C(1,5)=1;
	/*Extended Sistem*/
	Aa.setZero();
	Aa.block(0,0,16,16)=A;
	Aa.block(16,0,2,16)=C;

	Ba.setZero();
	Ba.block(0,0,16,4)=B;

	Ca=MatrixXf::Identity(18,18);
	/*Discretisation of de sistem(Euler Aproximation)*/
	*Az=MatrixXf::Identity(18,18)+Aa*ts;
	*Bz=Ba*ts;
}

Eigen::MatrixXf AircraftModel::MatrixSumRho(){
	using namespace Eigen;
	VectorXf Rho(18);
	Rho<<0,0,3.0000E+01,1.2159E+00,1.2159E+00,3.0396E-01,1.2159E+00,1.2159E+00,0,0,0,0,0,0,0,0,1.5000E+02,1.5198E+01;
	return Rho.asDiagonal();
}
Eigen::MatrixXf AircraftModel::MatrixSumLambda(){
	using namespace Eigen;
	Vector4f Lambda;
	Lambda<<1.9602E-08,1.9493E-08,1.1250E-05,1.1250E-05;
	return Lambda.asDiagonal();
}
Eigen::MatrixXf AircraftModel::RefrenceControl(Eigen::MatrixXf as){
	using namespace Eigen;
	float ddxr, ddyr, ddzr;
	ddxr=as(0,0);
	ddyr=as(1,0);
	ddzr=as(2,0);
	MatrixXf ur(4,1);
	float fR=9857.54 - 2.21085*ddxr + 1054.44*ddyr + 1004.85*ddzr;
	float fL=9837.48 + 2.22439*ddxr - 1054.62*ddyr + 1002.8*ddzr;
	float tauR=0;
	float tauL=0;
	ur<<fR,fL,tauR,tauL;
	return ur;

}
Eigen::MatrixXf AircraftModel::MatrixTerminalCost(){
	/* Name spaces ------------------------------------------------------------------*/
	using namespace Eigen;
	MatrixXf P(18,18);
	P.setZero();
	P(0,0)=7.733279E-04;
	P(0,1)=-1.152401E-07;
	P(0,2)=8.177416E-04;
	P(0,3)=2.134792E-04;
	P(0,4)=2.641057E-02;
	P(0,5)=3.084009E-04;
	P(0,6)=8.181960E-03;
	P(0,7)=8.053136E-03;
	P(0,8)=7.848039E-03;
	P(0,9)=2.995803E-06;
	P(0,10)=1.198271E-04;
	P(0,11)=3.832952E-05;
	P(0,12)=1.887063E-03;
	P(0,13)=3.865796E-05;
	P(0,14)=1.287643E-04;
	P(0,15)=1.265983E-04;
	P(0,16)=1.478786E-03;
	P(0,17)=6.993015E-04;
	P(1,0)=-1.152401E-07;
	P(1,1)=7.734515E-04;
	P(1,2)=6.214936E-04;
	P(1,3)=-2.296597E-02;
	P(1,4)=-2.348748E-04;
	P(1,5)=-1.767671E-03;
	P(1,6)=-2.491078E-04;
	P(1,7)=-3.365448E-05;
	P(1,8)=2.968113E-06;
	P(1,9)=7.712794E-03;
	P(1,10)=1.040058E-04;
	P(1,11)=-1.668808E-03;
	P(1,12)=-4.403140E-05;
	P(1,13)=-2.452491E-04;
	P(1,14)=-4.083395E-06;
	P(1,15)=-6.874535E-07;
	P(1,16)=1.205351E-03;
	P(1,17)=-5.110246E-03;
	P(2,0)=8.177416E-04;
	P(2,1)=6.214936E-04;
	P(2,2)=3.654994E+03;
	P(2,3)=-8.281143E-01;
	P(2,4)=1.127967E+00;
	P(2,5)=3.033398E-01;
	P(2,6)=9.847159E-01;
	P(2,7)=7.620425E-01;
	P(2,8)=1.971455E-02;
	P(2,9)=1.482617E-02;
	P(2,10)=4.667869E+02;
	P(2,11)=-1.721337E-01;
	P(2,12)=2.167728E-01;
	P(2,13)=5.258270E-02;
	P(2,14)=1.630641E-02;
	P(2,15)=1.318686E-02;
	P(2,16)=8.262952E+03;
	P(2,17)=6.539233E-01;
	P(3,0)=2.134792E-04;
	P(3,1)=-2.296597E-02;
	P(3,2)=-8.281143E-01;
	P(3,3)=2.967019E+01;
	P(3,4)=2.538579E-01;
	P(3,5)=2.125839E+00;
	P(3,6)=2.528140E-01;
	P(3,7)=7.788707E-02;
	P(3,8)=4.882086E-03;
	P(3,9)=-5.575167E-01;
	P(3,10)=-1.379753E-01;
	P(3,11)=2.842540E+00;
	P(3,12)=4.892300E-02;
	P(3,13)=2.832667E-01;
	P(3,14)=4.262261E-03;
	P(3,15)=1.296641E-03;
	P(3,16)=-1.627139E+00;
	P(3,17)=5.966189E+00;
	P(4,0)=2.641057E-02;
	P(4,1)=-2.348748E-04;
	P(4,2)=1.127967E+00;
	P(4,3)=2.538579E-01;
	P(4,4)=3.499465E+01;
	P(4,5)=3.477991E-01;
	P(4,6)=1.098339E+01;
	P(4,7)=1.084982E+01;
	P(4,8)=6.516931E-01;
	P(4,9)=-5.253305E-03;
	P(4,10)=2.223764E-01;
	P(4,11)=7.107480E-02;
	P(4,12)=3.789870E+00;
	P(4,13)=4.330541E-02;
	P(4,14)=1.810496E-01;
	P(4,15)=1.786895E-01;
	P(4,16)=2.046547E+00;
	P(4,17)=7.117362E-01;
	P(5,0)=3.084009E-04;
	P(5,1)=-1.767671E-03;
	P(5,2)=3.033398E-01;
	P(5,3)=2.125839E+00;
	P(5,4)=3.477991E-01;
	P(5,5)=1.260426E+02;
	P(5,6)=2.538233E+01;
	P(5,7)=-2.480903E+01;
	P(5,8)=7.179266E-03;
	P(5,9)=-4.297413E-02;
	P(5,10)=7.794548E-02;
	P(5,11)=5.759799E-01;
	P(5,12)=3.507774E-02;
	P(5,13)=1.595656E+01;
	P(5,14)=3.301110E-01;
	P(5,15)=-3.210247E-01;
	P(5,16)=2.456955E-01;
	P(5,17)=4.188308E+02;
	P(6,0)=8.181960E-03;
	P(6,1)=-2.491078E-04;
	P(6,2)=9.847159E-01;
	P(6,3)=2.528140E-01;
	P(6,4)=1.098339E+01;
	P(6,5)=2.538233E+01;
	P(6,6)=1.690149E+01;
	P(6,7)=-3.252979E-01;
	P(6,8)=2.015860E-01;
	P(6,9)=-5.936388E-03;
	P(6,10)=1.925817E-01;
	P(6,11)=1.233383E-01;
	P(6,12)=1.786852E+00;
	P(6,13)=3.716718E+00;
	P(6,14)=2.556627E-01;
	P(6,15)=1.670628E-02;
	P(6,16)=1.827904E+00;
	P(6,17)=7.850228E+01;
	P(7,0)=8.053136E-03;
	P(7,1)=-3.365448E-05;
	P(7,2)=7.620425E-01;
	P(7,3)=7.788707E-02;
	P(7,4)=1.084982E+01;
	P(7,5)=-2.480903E+01;
	P(7,6)=-3.252979E-01;
	P(7,7)=1.663835E+01;
	P(7,8)=1.985723E-01;
	P(7,9)=-6.714036E-04;
	P(7,10)=1.409629E-01;
	P(7,11)=-3.416705E-02;
	P(7,12)=1.767971E+00;
	P(7,13)=-3.644926E+00;
	P(7,14)=1.638723E-02;
	P(7,15)=2.505764E-01;
	P(7,16)=1.532841E+00;
	P(7,17)=-7.707801E+01;
	P(8,0)=7.848039E-03;
	P(8,1)=2.968113E-06;
	P(8,2)=1.971455E-02;
	P(8,3)=4.882086E-03;
	P(8,4)=6.516931E-01;
	P(8,5)=7.179266E-03;
	P(8,6)=2.015860E-01;
	P(8,7)=1.985723E-01;
	P(8,8)=1.920105E-01;
	P(8,9)=1.915956E-04;
	P(8,10)=2.914816E-03;
	P(8,11)=9.171033E-04;
	P(8,12)=4.666718E-02;
	P(8,13)=8.976633E-04;
	P(8,14)=3.173058E-03;
	P(8,15)=3.121823E-03;
	P(8,16)=3.474467E-02;
	P(8,17)=1.548444E-02;
	P(9,0)=2.995803E-06;
	P(9,1)=7.712794E-03;
	P(9,2)=1.482617E-02;
	P(9,3)=-5.575167E-01;
	P(9,4)=-5.253305E-03;
	P(9,5)=-4.297413E-02;
	P(9,6)=-5.936388E-03;
	P(9,7)=-6.714036E-04;
	P(9,8)=1.915956E-04;
	P(9,9)=1.857879E-01;
	P(9,10)=2.498459E-03;
	P(9,11)=-4.073266E-02;
	P(9,12)=-1.037342E-03;
	P(9,13)=-5.977601E-03;
	P(9,14)=-9.739990E-05;
	P(9,15)=-1.442302E-05;
	P(9,16)=2.836501E-02;
	P(9,17)=-1.241005E-01;
	P(10,0)=1.198271E-04;
	P(10,1)=1.040058E-04;
	P(10,2)=4.667869E+02;
	P(10,3)=-1.379753E-01;
	P(10,4)=2.223764E-01;
	P(10,5)=7.794548E-02;
	P(10,6)=1.925817E-01;
	P(10,7)=1.409629E-01;
	P(10,8)=2.914816E-03;
	P(10,9)=2.498459E-03;
	P(10,10)=7.481921E+01;
	P(10,11)=-3.281783E-02;
	P(10,12)=4.271116E-02;
	P(10,13)=1.271089E-02;
	P(10,14)=3.192884E-03;
	P(10,15)=2.476355E-03;
	P(10,16)=9.881952E+02;
	P(10,17)=2.038953E-01;
	P(11,0)=3.832952E-05;
	P(11,1)=-1.668808E-03;
	P(11,2)=-1.721337E-01;
	P(11,3)=2.842540E+00;
	P(11,4)=7.107480E-02;
	P(11,5)=5.759799E-01;
	P(11,6)=1.233383E-01;
	P(11,7)=-3.416705E-02;
	P(11,8)=9.171033E-04;
	P(11,9)=-4.073266E-02;
	P(11,10)=-3.281783E-02;
	P(11,11)=4.883300E-01;
	P(11,12)=1.352482E-02;
	P(11,13)=9.307602E-02;
	P(11,14)=1.828389E-03;
	P(11,15)=-3.097528E-04;
	P(11,16)=-3.363351E-01;
	P(11,17)=1.666356E+00;
	P(12,0)=1.887063E-03;
	P(12,1)=-4.403140E-05;
	P(12,2)=2.167728E-01;
	P(12,3)=4.892300E-02;
	P(12,4)=3.789870E+00;
	P(12,5)=3.507774E-02;
	P(12,6)=1.786852E+00;
	P(12,7)=1.767971E+00;
	P(12,8)=4.666718E-02;
	P(12,9)=-1.037342E-03;
	P(12,10)=4.271116E-02;
	P(12,11)=1.352482E-02;
	P(12,12)=5.768051E-01;
	P(12,13)=5.731979E-03;
	P(12,14)=3.021986E-02;
	P(12,15)=2.983955E-02;
	P(12,16)=4.090206E-01;
	P(12,17)=-2.238005E-02;
	P(13,0)=3.865796E-05;
	P(13,1)=-2.452491E-04;
	P(13,2)=5.258270E-02;
	P(13,3)=2.832667E-01;
	P(13,4)=4.330541E-02;
	P(13,5)=1.595656E+01;
	P(13,6)=3.716718E+00;
	P(13,7)=-3.644926E+00;
	P(13,8)=8.976633E-04;
	P(13,9)=-5.977601E-03;
	P(13,10)=1.271089E-02;
	P(13,11)=9.307602E-02;
	P(13,12)=5.731979E-03;
	P(13,13)=2.265753E+00;
	P(13,14)=4.923416E-02;
	P(13,15)=-4.795861E-02;
	P(13,16)=5.939516E-02;
	P(13,17)=5.029252E+01;
	P(14,0)=1.287643E-04;
	P(14,1)=-4.083395E-06;
	P(14,2)=1.630641E-02;
	P(14,3)=4.262261E-03;
	P(14,4)=1.810496E-01;
	P(14,5)=3.301110E-01;
	P(14,6)=2.556627E-01;
	P(14,7)=1.638723E-02;
	P(14,8)=3.173058E-03;
	P(14,9)=-9.739990E-05;
	P(14,10)=3.192884E-03;
	P(14,11)=1.828389E-03;
	P(14,12)=3.021986E-02;
	P(14,13)=4.923416E-02;
	P(14,14)=5.210412E-03;
	P(14,15)=6.117828E-04;
	P(14,16)=3.047528E-02;
	P(14,17)=1.011585E+00;
	P(15,0)=1.265983E-04;
	P(15,1)=-6.874535E-07;
	P(15,2)=1.318686E-02;
	P(15,3)=1.296641E-03;
	P(15,4)=1.786895E-01;
	P(15,5)=-3.210247E-01;
	P(15,6)=1.670628E-02;
	P(15,7)=2.505764E-01;
	P(15,8)=3.121823E-03;
	P(15,9)=-1.442302E-05;
	P(15,10)=2.476355E-03;
	P(15,11)=-3.097528E-04;
	P(15,12)=2.983955E-02;
	P(15,13)=-4.795861E-02;
	P(15,14)=6.117828E-04;
	P(15,15)=5.082629E-03;
	P(15,16)=2.620124E-02;
	P(15,17)=-1.087757E+00;
	P(16,0)=1.478786E-03;
	P(16,1)=1.205351E-03;
	P(16,2)=8.262952E+03;
	P(16,3)=-1.627139E+00;
	P(16,4)=2.046547E+00;
	P(16,5)=2.456955E-01;
	P(16,6)=1.827904E+00;
	P(16,7)=1.532841E+00;
	P(16,8)=3.474467E-02;
	P(16,9)=2.836501E-02;
	P(16,10)=9.881952E+02;
	P(16,11)=-3.363351E-01;
	P(16,12)=4.090206E-01;
	P(16,13)=5.939516E-02;
	P(16,14)=3.047528E-02;
	P(16,15)=2.620124E-02;
	P(16,16)=2.612527E+04;
	P(16,17)=-3.368394E-03;
	P(17,0)=6.993015E-04;
	P(17,1)=-5.110246E-03;
	P(17,2)=6.539233E-01;
	P(17,3)=5.966189E+00;
	P(17,4)=7.117362E-01;
	P(17,5)=4.188308E+02;
	P(17,6)=7.850228E+01;
	P(17,7)=-7.707801E+01;
	P(17,8)=1.548444E-02;
	P(17,9)=-1.241005E-01;
	P(17,10)=2.038953E-01;
	P(17,11)=1.666356E+00;
	P(17,12)=-2.238005E-02;
	P(17,13)=5.029252E+01;
	P(17,14)=1.011585E+00;
	P(17,15)=-1.087757E+00;
	P(17,16)=-3.368394E-03;
	P(17,17)=1.640503E+03;
	return P;
}
Eigen::VectorXf AircraftModel::OutputMaxVector(){
	using namespace Eigen;
	VectorXf ymax(18,1);
	ymax<< 4,4,24,2,2.4,2,2.4,2.4,40,40,40,40,40,40,240,240,2,2;
	return ymax;
}
Eigen::VectorXf AircraftModel::OutputMinVector(){
	using namespace Eigen;
	VectorXf ymin(18,1);
	ymin<< -4,-4,-24,-2,-2.4,-2,-2.4,-2.4,-40,-40,-40,-40,-40,-40,-240,-240,-2,-2;
	return ymin;
}
Eigen::VectorXf AircraftModel::ControlMaxVector(){
	using namespace Eigen;
	VectorXf umax(4,1);
	umax<< 17000,17000,2000,2000;
	return umax;
}
Eigen::VectorXf AircraftModel::ControlMinVector(){
	using namespace Eigen;
	VectorXf umin(4,1);
	umin<< 0,0,-2000,-2000;
	return umin;
}
/* Private functions ---------------------------------------------------------*/
} /* namespace loadmodel */
